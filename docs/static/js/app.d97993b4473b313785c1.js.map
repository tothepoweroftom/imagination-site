{"version":3,"sources":["webpack:///./src/App.vue?8158","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/components/js/SceneManager.js","webpack:///./src/components/js/ImaginationScene.js","webpack:///./src/components/js/ColorPalette.js","webpack:///./src/components/js/LSTM.js","webpack:///src/components/HelloWorld.vue","webpack:///./src/components/HelloWorld.vue?3568","webpack:///./src/components/HelloWorld.vue","webpack:///./src/components/About.vue?6ad0","webpack:///./src/components/About.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","name","mode","_v","type","staticRenderFns","src_App","__webpack_require__","normalizeComponent","components","ssrContext","SceneManager","canvas","classCallCheck_default","container","document","getElementById","width","clientWidth","height","clientHeight","size","clock","THREE","start","scene","registerTVShader","lights","buildLights","camera","buildCamera","renderer","buildRender","initScenes","geometry","material","color","sphere","position","set","add","imaginationScene","_this","sceneGroup","weight","init","load","Date","now","panoTexture","uniforms","merge","diffuse","value","tShine","time","vertexShader","textContent","fragmentShader","console","log","mesh","scale","setScalar","update","delta","rotation","y","Math","sin","news","TweenLite","to","onComplete","BadTVShader","tDiffuse","distortion","distortion2","speed","rollSpeed","join","light","aspectRatio","lookAt","antialias","alpha","DPR","window","devicePixelRatio","setPixelRatio","setSize","gammaInput","gammaOutput","getDelta","ColorPalette","colors","LSTM","runningInference","charRNN","ml5","modelReady","text","callback","txt","toLowerCase","length","data","seed","temperature","generate","HelloWorld","props","msg","String","sceneManager","stats","colorIndex","question","articleIndex","articles","lstm","methods","requestAnimationFrame","setupLonghold","delay","_this2","body","addEventListener","e","setTimeout","style","backgroundColor","getNextNews","clearTimeout","setupShake","_this3","shake_default","a","threshold","timeout","getTrendingNews","_this4","fetch","then","response","json","myJson","topArticle","title","split","rita_default","tokenize","nouns","getPosTags","forEach","element","index","includes","push","formQuestion","err","result","sample","verbs","adj","adverb","mounted","js_SceneManager","js_LSTM","components_HelloWorld","staticClass","_m","_s","src_components_HelloWorld","HelloWorld_normalizeComponent","components_About","src_components_About","About_normalizeComponent","Vue","use","Router","router","routes","path","component","About","config","productionTip","el","template","App"],"mappings":"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","file":"static/js/app.d97993b4473b313785c1.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[_c('router-view')],1),_vm._v(\" \"),_c('script',{attrs:{\"type\":\"x-shader/x-vertex\",\"id\":\"vertexShader\"}},[_vm._v(\"\\n    //\\n    // GLSL textureless classic 3D noise \\\"cnoise\\\",\\n    // with an RSL-style periodic variant \\\"pnoise\\\".\\n    // Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n    // Version: 2011-10-11\\n    //\\n    // Many thanks to Ian McEwan of Ashima Arts for the\\n    // ideas for permutation and gradient selection.\\n    //\\n    // Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n    // Distributed under the MIT license. See LICENSE file.\\n    // https://github.com/ashima/webgl-noise\\n    //\\n    vec3 mod289(vec3 x)\\n    {\\n      return x - floor(x * (1.0 / 289.0)) * 289.0;\\n    }\\n    vec4 mod289(vec4 x)\\n    {\\n      return x - floor(x * (1.0 / 289.0)) * 289.0;\\n    }\\n    vec4 permute(vec4 x)\\n    {\\n      return mod289(((x*34.0)+1.0)*x);\\n    }\\n    vec4 taylorInvSqrt(vec4 r)\\n    {\\n      return 1.79284291400159 - 0.85373472095314 * r;\\n    }\\n    vec3 fade(vec3 t) {\\n      return t*t*t*(t*(t*6.0-15.0)+10.0);\\n    }\\n    // Classic Perlin noise\\n    float cnoise(vec3 P)\\n    {\\n      vec3 Pi0 = floor(P); // Integer part for indexing\\n      vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n      Pi0 = mod289(Pi0);\\n      Pi1 = mod289(Pi1);\\n      vec3 Pf0 = fract(P); // Fractional part for interpolation\\n      vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n      vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n      vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n      vec4 iz0 = Pi0.zzzz;\\n      vec4 iz1 = Pi1.zzzz;\\n      vec4 ixy = permute(permute(ix) + iy);\\n      vec4 ixy0 = permute(ixy + iz0);\\n      vec4 ixy1 = permute(ixy + iz1);\\n      vec4 gx0 = ixy0 * (1.0 / 7.0);\\n      vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n      gx0 = fract(gx0);\\n      vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n      vec4 sz0 = step(gz0, vec4(0.0));\\n      gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n      gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n      vec4 gx1 = ixy1 * (1.0 / 7.0);\\n      vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n      gx1 = fract(gx1);\\n      vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n      vec4 sz1 = step(gz1, vec4(0.0));\\n      gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n      gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n      vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n      vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n      vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n      vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n      vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n      vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n      vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n      vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n      vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n      g000 *= norm0.x;\\n      g010 *= norm0.y;\\n      g100 *= norm0.z;\\n      g110 *= norm0.w;\\n      vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n      g001 *= norm1.x;\\n      g011 *= norm1.y;\\n      g101 *= norm1.z;\\n      g111 *= norm1.w;\\n      float n000 = dot(g000, Pf0);\\n      float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n      float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n      float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n      float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n      float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n      float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n      float n111 = dot(g111, Pf1);\\n      vec3 fade_xyz = fade(Pf0);\\n      vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n      vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n      float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n      return 2.2 * n_xyz;\\n    }\\n    // Classic Perlin noise, periodic variant\\n    float pnoise(vec3 P, vec3 rep)\\n    {\\n      vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n      vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n      Pi0 = mod289(Pi0);\\n      Pi1 = mod289(Pi1);\\n      vec3 Pf0 = fract(P); // Fractional part for interpolation\\n      vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n      vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n      vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n      vec4 iz0 = Pi0.zzzz;\\n      vec4 iz1 = Pi1.zzzz;\\n      vec4 ixy = permute(permute(ix) + iy);\\n      vec4 ixy0 = permute(ixy + iz0);\\n      vec4 ixy1 = permute(ixy + iz1);\\n      vec4 gx0 = ixy0 * (1.0 / 7.0);\\n      vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n      gx0 = fract(gx0);\\n      vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n      vec4 sz0 = step(gz0, vec4(0.0));\\n      gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n      gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n      vec4 gx1 = ixy1 * (1.0 / 7.0);\\n      vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n      gx1 = fract(gx1);\\n      vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n      vec4 sz1 = step(gz1, vec4(0.0));\\n      gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n      gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n      vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n      vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n      vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n      vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n      vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n      vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n      vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n      vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n      vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n      g000 *= norm0.x;\\n      g010 *= norm0.y;\\n      g100 *= norm0.z;\\n      g110 *= norm0.w;\\n      vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n      g001 *= norm1.x;\\n      g011 *= norm1.y;\\n      g101 *= norm1.z;\\n      g111 *= norm1.w;\\n      float n000 = dot(g000, Pf0);\\n      float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n      float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n      float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n      float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n      float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n      float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n      float n111 = dot(g111, Pf1);\\n      vec3 fade_xyz = fade(Pf0);\\n      vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n      vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n      float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n      return 2.2 * n_xyz;\\n    }\\n    \\tfloat stripes( float x, float f) {\\n    \\t\\tfloat PI = 3.14159265358979323846264;\\n    \\t\\tfloat t = .5 + .5 * sin( f * 2.0 * PI * x);\\n    \\t\\treturn t * t - .5;\\n    \\t}\\n    \\tfloat turbulence( vec3 p ) {\\n    \\t\\tfloat w = 100.0;\\n    \\t\\tfloat t = -.5;\\n    \\t\\tfor (float f = 1.0 ; f <= 10.0 ; f++ ){\\n    \\t\\t\\tfloat power = pow( 2.0, f );\\n    \\t\\t\\tt += abs( pnoise( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\\n    \\t\\t}\\n    \\t\\treturn t;\\n    \\t}\\n    \\tfloat f( vec3 p ) {\\n    \\t\\treturn pnoise( vec3( p ), vec3( 10.0, 10.0, 10.0 ) );\\n    \\t\\treturn pnoise( 8.0 * vec3( p ), vec3( 10.0, 10.0, 10.0 ) );\\n    \\t}\\n    \\tvarying vec3 vNormal;\\n    \\tvarying vec3 vReflect;\\n    \\tvarying float ao;\\n    \\tuniform float time;\\n    \\tuniform float weight;\\n    \\tfloat fround( float value ) {\\n    \\t\\treturn floor( value + 0.5 );\\n    \\t}\\n    \\tvec3 v3round( vec3 value ) {\\n    \\t\\treturn vec3( fround( value.x ), fround( value.y ), fround( value.z ) );\\n    \\t}\\n    \\tvoid main() {\\n    \\t\\tvec3 evNormal = normal;\\n    \\t\\tvec3 aniNormal = 2.0 * evNormal + time;\\n    \\t\\tfloat f0 = weight * f( aniNormal );\\n    \\t\\tfloat fx = weight * f( aniNormal + vec3( .0001, 0.0, 0.0 ) );\\n    \\t\\tfloat fy = weight * f( aniNormal + vec3( 0.0, .0001, 0.0 ) );\\n    \\t\\tfloat fz = weight * f( aniNormal + vec3( 0.0, 0.0, .0001 ) );\\n    \\t\\tvec3 modifiedNormal = normalize( evNormal - vec3( (fx - f0) / .0001, (fy - f0) / .0001, (fz - f0) / .0001 ) );\\n    \\t\\tif( weight > 0.0 ) {\\n    \\t\\t\\tao = f0 / weight;\\n    \\t\\t} else {\\n    \\t\\t\\tao = 0.0;\\n    \\t\\t}\\n    \\t\\tvNormal = modifiedNormal;\\n    \\t\\tvec3 newPosition = position + f0 * evNormal;\\n    \\t\\tvec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * modifiedNormal );\\n    \\t\\tvReflect = normalize( reflect( normalize( newPosition.xyz - cameraPosition ), nWorld ) );\\n    \\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\\n    \\t}\\n  \")]),_vm._v(\" \"),_c('script',{attrs:{\"type\":\"x-shader/x-vertex\",\"id\":\"fragmentShader\"}},[_vm._v(\"\\n    varying vec2 vUv;\\n    varying vec3 vNormal;\\n    varying vec3 vReflect;\\n    varying float ao;\\n    uniform sampler2D tShine;\\n    uniform float time;\\n    float PI = 3.14159265358979323846264;\\n    void main() {\\n    \\tfloat yaw = .5 - atan( vReflect.z, - vReflect.x ) / ( 2.0 * PI );\\n    \\tfloat pitch = .5 - asin( vReflect.y ) / PI;\\n    \\tvec2 pos = vec2( yaw, pitch );\\n    \\tvec3 color = texture2D( tShine, pos ).rgb;\\n    \\tfloat diffuse_value1 = .0015 * max(dot(vNormal, vec3( -490.0, 29.8, -85.8 ) ), 0.0);\\n    \\tfloat diffuse_value2 = .0005 * max(dot(vNormal, vec3( -460.0, 40.27, 187.4 ) ), 0.0);\\n    \\tfloat diffuse_value3 = .0010 * max(dot(vNormal, vec3( 175.5, 30.04, 466.4 ) ), 0.0);\\n    \\tfloat diffuse_value4 = .0005 * max(dot(vNormal, vec3( 466.0, 45.3, 172.9 ) ), 0.0);\\n    \\tgl_FragColor = vec4( color - .15 * ao + .3 * vec3( diffuse_value1 + diffuse_value2 + diffuse_value3 + diffuse_value4 ), 1.0 );\\n    }\\n  \")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2aa769ac\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2aa769ac\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2aa769ac\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <transition name=\"fade\" mode=\"out-in\">\n      <router-view></router-view>\n    </transition>\n    <script type=\"x-shader/x-vertex\" id=\"vertexShader\">\n      //\n      // GLSL textureless classic 3D noise \"cnoise\",\n      // with an RSL-style periodic variant \"pnoise\".\n      // Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n      // Version: 2011-10-11\n      //\n      // Many thanks to Ian McEwan of Ashima Arts for the\n      // ideas for permutation and gradient selection.\n      //\n      // Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n      // Distributed under the MIT license. See LICENSE file.\n      // https://github.com/ashima/webgl-noise\n      //\n      vec3 mod289(vec3 x)\n      {\n        return x - floor(x * (1.0 / 289.0)) * 289.0;\n      }\n      vec4 mod289(vec4 x)\n      {\n        return x - floor(x * (1.0 / 289.0)) * 289.0;\n      }\n      vec4 permute(vec4 x)\n      {\n        return mod289(((x*34.0)+1.0)*x);\n      }\n      vec4 taylorInvSqrt(vec4 r)\n      {\n        return 1.79284291400159 - 0.85373472095314 * r;\n      }\n      vec3 fade(vec3 t) {\n        return t*t*t*(t*(t*6.0-15.0)+10.0);\n      }\n      // Classic Perlin noise\n      float cnoise(vec3 P)\n      {\n        vec3 Pi0 = floor(P); // Integer part for indexing\n        vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n        Pi0 = mod289(Pi0);\n        Pi1 = mod289(Pi1);\n        vec3 Pf0 = fract(P); // Fractional part for interpolation\n        vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n        vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n        vec4 iy = vec4(Pi0.yy, Pi1.yy);\n        vec4 iz0 = Pi0.zzzz;\n        vec4 iz1 = Pi1.zzzz;\n        vec4 ixy = permute(permute(ix) + iy);\n        vec4 ixy0 = permute(ixy + iz0);\n        vec4 ixy1 = permute(ixy + iz1);\n        vec4 gx0 = ixy0 * (1.0 / 7.0);\n        vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n        gx0 = fract(gx0);\n        vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n        vec4 sz0 = step(gz0, vec4(0.0));\n        gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n        gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n        vec4 gx1 = ixy1 * (1.0 / 7.0);\n        vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n        gx1 = fract(gx1);\n        vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n        vec4 sz1 = step(gz1, vec4(0.0));\n        gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n        gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n        vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n        vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n        vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n        vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n        vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n        vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n        vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n        vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n        vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n        g000 *= norm0.x;\n        g010 *= norm0.y;\n        g100 *= norm0.z;\n        g110 *= norm0.w;\n        vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n        g001 *= norm1.x;\n        g011 *= norm1.y;\n        g101 *= norm1.z;\n        g111 *= norm1.w;\n        float n000 = dot(g000, Pf0);\n        float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n        float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n        float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n        float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n        float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n        float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n        float n111 = dot(g111, Pf1);\n        vec3 fade_xyz = fade(Pf0);\n        vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n        vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n        float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n        return 2.2 * n_xyz;\n      }\n      // Classic Perlin noise, periodic variant\n      float pnoise(vec3 P, vec3 rep)\n      {\n        vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n        vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n        Pi0 = mod289(Pi0);\n        Pi1 = mod289(Pi1);\n        vec3 Pf0 = fract(P); // Fractional part for interpolation\n        vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n        vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n        vec4 iy = vec4(Pi0.yy, Pi1.yy);\n        vec4 iz0 = Pi0.zzzz;\n        vec4 iz1 = Pi1.zzzz;\n        vec4 ixy = permute(permute(ix) + iy);\n        vec4 ixy0 = permute(ixy + iz0);\n        vec4 ixy1 = permute(ixy + iz1);\n        vec4 gx0 = ixy0 * (1.0 / 7.0);\n        vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n        gx0 = fract(gx0);\n        vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n        vec4 sz0 = step(gz0, vec4(0.0));\n        gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n        gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n        vec4 gx1 = ixy1 * (1.0 / 7.0);\n        vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n        gx1 = fract(gx1);\n        vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n        vec4 sz1 = step(gz1, vec4(0.0));\n        gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n        gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n        vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n        vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n        vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n        vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n        vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n        vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n        vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n        vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n        vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n        g000 *= norm0.x;\n        g010 *= norm0.y;\n        g100 *= norm0.z;\n        g110 *= norm0.w;\n        vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n        g001 *= norm1.x;\n        g011 *= norm1.y;\n        g101 *= norm1.z;\n        g111 *= norm1.w;\n        float n000 = dot(g000, Pf0);\n        float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n        float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n        float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n        float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n        float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n        float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n        float n111 = dot(g111, Pf1);\n        vec3 fade_xyz = fade(Pf0);\n        vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n        vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n        float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n        return 2.2 * n_xyz;\n      }\n      \tfloat stripes( float x, float f) {\n      \t\tfloat PI = 3.14159265358979323846264;\n      \t\tfloat t = .5 + .5 * sin( f * 2.0 * PI * x);\n      \t\treturn t * t - .5;\n      \t}\n      \tfloat turbulence( vec3 p ) {\n      \t\tfloat w = 100.0;\n      \t\tfloat t = -.5;\n      \t\tfor (float f = 1.0 ; f <= 10.0 ; f++ ){\n      \t\t\tfloat power = pow( 2.0, f );\n      \t\t\tt += abs( pnoise( vec3( power * p ), vec3( 10.0, 10.0, 10.0 ) ) / power );\n      \t\t}\n      \t\treturn t;\n      \t}\n      \tfloat f( vec3 p ) {\n      \t\treturn pnoise( vec3( p ), vec3( 10.0, 10.0, 10.0 ) );\n      \t\treturn pnoise( 8.0 * vec3( p ), vec3( 10.0, 10.0, 10.0 ) );\n      \t}\n      \tvarying vec3 vNormal;\n      \tvarying vec3 vReflect;\n      \tvarying float ao;\n      \tuniform float time;\n      \tuniform float weight;\n      \tfloat fround( float value ) {\n      \t\treturn floor( value + 0.5 );\n      \t}\n      \tvec3 v3round( vec3 value ) {\n      \t\treturn vec3( fround( value.x ), fround( value.y ), fround( value.z ) );\n      \t}\n      \tvoid main() {\n      \t\tvec3 evNormal = normal;\n      \t\tvec3 aniNormal = 2.0 * evNormal + time;\n      \t\tfloat f0 = weight * f( aniNormal );\n      \t\tfloat fx = weight * f( aniNormal + vec3( .0001, 0.0, 0.0 ) );\n      \t\tfloat fy = weight * f( aniNormal + vec3( 0.0, .0001, 0.0 ) );\n      \t\tfloat fz = weight * f( aniNormal + vec3( 0.0, 0.0, .0001 ) );\n      \t\tvec3 modifiedNormal = normalize( evNormal - vec3( (fx - f0) / .0001, (fy - f0) / .0001, (fz - f0) / .0001 ) );\n      \t\tif( weight > 0.0 ) {\n      \t\t\tao = f0 / weight;\n      \t\t} else {\n      \t\t\tao = 0.0;\n      \t\t}\n      \t\tvNormal = modifiedNormal;\n      \t\tvec3 newPosition = position + f0 * evNormal;\n      \t\tvec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * modifiedNormal );\n      \t\tvReflect = normalize( reflect( normalize( newPosition.xyz - cameraPosition ), nWorld ) );\n      \t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n      \t}\n    </script>\n\n    <script type=\"x-shader/x-vertex\" id=\"fragmentShader\">\n      varying vec2 vUv;\n      varying vec3 vNormal;\n      varying vec3 vReflect;\n      varying float ao;\n      uniform sampler2D tShine;\n      uniform float time;\n      float PI = 3.14159265358979323846264;\n      void main() {\n      \tfloat yaw = .5 - atan( vReflect.z, - vReflect.x ) / ( 2.0 * PI );\n      \tfloat pitch = .5 - asin( vReflect.y ) / PI;\n      \tvec2 pos = vec2( yaw, pitch );\n      \tvec3 color = texture2D( tShine, pos ).rgb;\n      \tfloat diffuse_value1 = .0015 * max(dot(vNormal, vec3( -490.0, 29.8, -85.8 ) ), 0.0);\n      \tfloat diffuse_value2 = .0005 * max(dot(vNormal, vec3( -460.0, 40.27, 187.4 ) ), 0.0);\n      \tfloat diffuse_value3 = .0010 * max(dot(vNormal, vec3( 175.5, 30.04, 466.4 ) ), 0.0);\n      \tfloat diffuse_value4 = .0005 * max(dot(vNormal, vec3( 466.0, 45.3, 172.9 ) ), 0.0);\n      \tgl_FragColor = vec4( color - .15 * ao + .3 * vec3( diffuse_value1 + diffuse_value2 + diffuse_value3 + diffuse_value4 ), 1.0 );\n      }\n    </script>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"App\",\n  components: {}\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","import * as THREE from \"three\";\nimport { TweenLite } from \"gsap\";\nimport { BloomEffect, EffectComposer, ShaderPass, EffectPass, RenderPass } from \"postprocessing\";\n// import BadTVShade\nimport ImaginationScene from \"./ImaginationScene.js\";\n\nexport default class SceneManager {\n  constructor(canvas) {\n    let container = document.getElementById(\"threejs-container\");\n    canvas.width = container.clientWidth;\n    canvas.height = container.clientHeight;\n    this.width = canvas.width;\n    this.height = canvas.height;\n    this.size = {\n      width: this.width,\n      height: this.height\n    };\n\n    this.clock = new THREE.Clock();\n    this.clock.start();\n\n    //Setup Scene, Lights, Camera and Renderer\n    this.scene = new THREE.Scene();\n    this.registerTVShader();\n    this.lights = this.buildLights(this.scene);\n    this.camera = this.buildCamera(this.width, this.height);\n    this.renderer = this.buildRender(this.width, this.height);\n    // this.composer = new EffectComposer(this.renderer)\n\n    // this.badTVPass = new ShaderPass( this.BadTVShader );\n    // this.composer.addPass(new RenderPass(this.scene, this.camera));\n    // this.composer.addPass(this.badTVPass);\n\n    this.initScenes();\n    var geometry = new THREE.SphereGeometry( 5, 32, 32 );\nvar material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n\nvar sphere = new THREE.Mesh( geometry, material );\nsphere.position.set(0,0,0)\nthis.scene.add( sphere );\n  }\n\n  initScenes() {\n    this.imaginationScene = new ImaginationScene(this.scene);\n    this.imaginationScene.init();\n  }\n\n  news() {\n    this.imaginationScene.news();\n  }\n\n  registerTVShader() {\n    this.BadTVShader = {\n      uniforms: {\n        \"tDiffuse\": \t{ type: \"t\", value: null },\n        \"time\": \t\t{ type: \"f\", value: 0.0 },\n        \"distortion\":   { type: \"f\", value: 3.0 },\n        \"distortion2\":  { type: \"f\", value: 5.0 },\n        \"speed\":     \t{ type: \"f\", value: 0.2 },\n        \"rollSpeed\":    { type: \"f\", value: 0.1 },\n      },\n    \n      vertexShader: [\n        \"varying vec2 vUv;\",\n        \"void main() {\",\n        \"vUv = uv;\",\n        \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n        \"}\"\n    \n      ].join(\"\\n\"),\n    \n      fragmentShader: [\n    \n        \"uniform sampler2D tDiffuse;\",\n        \"uniform float time;\",\n        \"uniform float distortion;\",\n        \"uniform float distortion2;\",\n        \"uniform float speed;\",\n        \"uniform float rollSpeed;\",\n        \"varying vec2 vUv;\",\n        \n        // Start Ashima 2D Simplex Noise\n    \n        \"vec3 mod289(vec3 x) {\",\n        \"  return x - floor(x * (1.0 / 289.0)) * 289.0;\",\n        \"}\",\n    \n        \"vec2 mod289(vec2 x) {\",\n        \"  return x - floor(x * (1.0 / 289.0)) * 289.0;\",\n        \"}\",\n    \n        \"vec3 permute(vec3 x) {\",\n        \"  return mod289(((x*34.0)+1.0)*x);\",\n        \"}\",\n    \n        \"float snoise(vec2 v)\",\n        \"  {\",\n        \"  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\",\n        \"                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\",\n        \"                     -0.577350269189626,  // -1.0 + 2.0 * C.x\",\n        \"                      0.024390243902439); // 1.0 / 41.0\",\n        \"  vec2 i  = floor(v + dot(v, C.yy) );\",\n        \"  vec2 x0 = v -   i + dot(i, C.xx);\",\n    \n        \"  vec2 i1;\",\n        \"  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\",\n        \"  vec4 x12 = x0.xyxy + C.xxzz;\",\n        \" x12.xy -= i1;\",\n    \n        \"  i = mod289(i); // Avoid truncation effects in permutation\",\n        \"  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\",\n        \"\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\",\n    \n        \"  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\",\n        \"  m = m*m ;\",\n        \"  m = m*m ;\",\n    \n        \"  vec3 x = 2.0 * fract(p * C.www) - 1.0;\",\n        \"  vec3 h = abs(x) - 0.5;\",\n        \"  vec3 ox = floor(x + 0.5);\",\n        \"  vec3 a0 = x - ox;\",\n    \n        \"  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\",\n    \n        \"  vec3 g;\",\n        \"  g.x  = a0.x  * x0.x  + h.x  * x0.y;\",\n        \"  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\",\n        \"  return 130.0 * dot(m, g);\",\n        \"}\",\n    \n        // End Ashima 2D Simplex Noise\n    \n        \"void main() {\",\n    \n          \"vec2 p = vUv;\",\n          \"float ty = time*speed;\",\n          \"float yt = p.y - ty;\",\n          //smooth distortion\n          \"float offset = snoise(vec2(yt*3.0,0.0))*0.2;\",\n          // boost distortion\n          \"offset = offset*distortion * offset*distortion * offset;\",\n          //add fine grain distortion\n          \"offset += snoise(vec2(yt*50.0,0.0))*distortion2*0.001;\",\n          //combine distortion on X with roll on Y\n          \"gl_FragColor = texture2D(tDiffuse,  vec2(fract(p.x + offset),fract(p.y-time*rollSpeed) ));\",\n    \n        \"}\"\n    \n      ].join(\"\\n\")\n    \n    };\n  }\n\n  buildLights(scene) {\n    var light = new THREE.AmbientLight(0xffffff); // soft white light\n    scene.add(light);\n\n    var light = new THREE.PointLight(0xffffff, 1, 150);\n    light.position.set(20, 10, 10);\n    // scene.add(light);\n\n    var light = new THREE.PointLight(0xffffff, 1, 150);\n    light.position.set(-20, 10, 10);\n    // scene.add(light);\n  }\n\n  buildCamera(width, height) {\n    var aspectRatio = width / height;\n    var fieldOfView = 30;\n    var nearPlane = 1;\n    var farPlane = 10000;\n    var camera = new THREE.PerspectiveCamera(\n      fieldOfView,\n      aspectRatio,\n      nearPlane,\n      farPlane\n    );\n\n    camera.position.set(0, 0, 100);\n\n    camera.lookAt(new THREE.Vector3(0, 0, 0));\n    return camera;\n  }\n\n  buildRender(width, height) {\n    var renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true,\n      alpha: true\n    });\n    var DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    renderer.setPixelRatio(DPR);\n    renderer.setSize(width, height);\n\n    renderer.gammaInput = true;\n    renderer.gammaOutput = true;\n\n    return renderer;\n  }\n\n  update() {\n    const delta = this.clock.getDelta();\n    this.renderer.render(this.scene, this.camera);\n    // this.composer.render(delta);\n\n    this.time += 1;\n    this.imaginationScene.update(delta);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/js/SceneManager.js","import * as THREE from \"three\";\n// import GLTFLoader from \"three-gltf-loader\";\nimport {TweenLite } from 'gsap'\n\nexport default function ImaginationScene(scene) {\n  this.sceneGroup = new THREE.Group();\n  scene.add(this.sceneGroup);\n  this.material = null;\n  // this.loader = new GLTFLoader();\n  this.weight = 10.0\n\n  // scene.background\n  this.init = () => {\n    this.load();\n    this.start = Date.now();\n  };\n\n  this.load = () => {\n    // instantiate a loader\n    var panoTexture = new THREE.TextureLoader().load(\"src/assets/green.png\");\n\n    var uniforms = THREE.UniformsUtils.merge([\n      THREE.UniformsLib[\"lights\"],\n      {\n        diffuse: { type: \"c\", value: new THREE.Color(0xffffff) },\n        tShine: { type: \"t\", value: panoTexture },\n        time: { type: \"f\", value: 0 },\n        weight: { type: \"f\", value: 0 }\n      }\n    ]);\n\n    this.material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: document.getElementById(\"vertexShader\").textContent,\n      fragmentShader: document.getElementById(\"fragmentShader\").textContent,\n      lights: true\n    });\n    console.log(this.material);\n    let mesh = new THREE.Mesh(\n      new THREE.IcosahedronGeometry(20, 5),\n      this.material\n    );\n    console.log(mesh);\n    mesh.scale.setScalar(0.7);\n    mesh.position.set(0, 0, 0);\n    this.sceneGroup.add(mesh);\n  };\n\n  this.update = delta => {\n    this.sceneGroup.rotation.y += 0.005;\n    if (this.material) {\n      this.material.uniforms[\"time\"].value += delta\n      this.material.uniforms[\"weight\"].value =\n        this.weight * (0.5 + 0.5 * Math.sin(0.00025 * (Date.now() - this.start)));\n    }\n  };\n\n  this.news = () => {\n      TweenLite.to(this.material.uniforms[\"time\"],1.0, {\n        value: 0.1,\n      })\n      TweenLite.to(this,1.0, {\n        weight: 20.0,\n        onComplete: ()=>{\n          TweenLite.to(this,1.0, {\n            weight: 10.0,\n          })\n        }\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/js/ImaginationScene.js","export default {\n  colors: [\"#0892A5\", \"#ff0000\", \"#ff00ff\", \"#FFACE4\"]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/js/ColorPalette.js","import ml5 from \"ml5\";\n\nexport default class LSTM {\n  constructor() {\n    this.runningInference = false;\n    this.load();\n  }\n\n  load() {\n    this.charRNN = ml5.charRNN(\"static/woolf/\", this.modelReady);\n  }\n\n  modelReady() {\n    console.log(\"Model Loaded\");\n  }\n\n  // Generate new text\n  generate(text, callback) {\n    // prevent starting inference if we've already started another instance\n    // TODO: is there better JS way of doing this?\n    if (!this.runningInference) {\n      this.runningInference = true;\n\n      // Update the status log\n      console.log(\"Generating...\");\n\n      // Grab the original text\n      let original = text;\n      // Make it to lower case\n      let txt = text.toLowerCase();\n\n      // Check if there's something to send\n      if (txt.length > 0) {\n        // This is what the LSTM generator needs\n        // Seed text, temperature, length to outputs\n        // TODO: What are the defaults?\n        let data = {\n          seed: txt,\n          temperature: 0.5,\n          length: 100\n        };\n\n        // Generate text with the charRNN\n        this.charRNN.generate(data, callback);\n\n        // When it's done\n        function gotData(err, result) {\n          // Update the status log\n          console.log(result.sample);\n          this.runningInference = false;\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/js/LSTM.js","<template>\n  <div class=\"hello\">\n    <div id=\"threejs-container\"><canvas id=\"canvas\"></canvas></div>\n\n    <div id=\"question\">{{ question }}</div>\n  </div>\n</template>\n\n<script>\nimport SceneManager from \"./js/SceneManager.js\";\nimport Stats from \"stats-js\";\nimport Shake from \"shake.js\";\nimport ColorPalette from \"./js/ColorPalette.js\";\nimport Rita from \"rita\";\nimport LSTM from \"./js/LSTM.js\";\n\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      sceneManager: null,\n      stats: null,\n      colorIndex: 0,\n      question: null,\n      articleIndex: 0,\n      articles: null,\n      lstm: null\n    };\n  },\n\n  methods: {\n    render: function() {\n      // this.stats.begin();\n      requestAnimationFrame(this.render);\n      this.sceneManager.update();\n      // this.stats.end();\n    },\n\n    setupLonghold: function() {\n      let body = document.body;\n      // Create variable for setTimeout\n      var delay;\n\n      // Set number of milliseconds for longpress\n      body.addEventListener(\n        \"mousedown\",\n        e => {\n          var _this = this;\n          delay = setTimeout(check, 1000);\n\n          function check() {\n            document.getElementById(\"canvas\").style.backgroundColor =\n              ColorPalette.colors[\n                _this.colorIndex % ColorPalette.colors.length\n              ];\n            _this.colorIndex += 1;\n\n            _this.articleIndex += 1;\n            _this.getNextNews();\n          }\n        },\n        true\n      );\n\n      body.addEventListener(\"mouseup\", function(e) {\n        // On mouse up, we know it is no longer a longpress\n        clearTimeout(delay);\n      });\n\n      body.addEventListener(\"mouseout\", function(e) {\n        clearTimeout(delay);\n      });\n    },\n\n    setupShake: function() {\n      var myShakeEvent = new Shake({\n        threshold: 10, // optional shake strength threshold\n        timeout: 1000 // optional, determines the frequency of event generation\n      });\n\n      myShakeEvent.start();\n\n      window.addEventListener(\n        \"shake\",\n        () => {\n          //put your own code here etc.\n          // alert(\"shake!\");\n          document.getElementById(\"canvas\").style.backgroundColor =\n            ColorPalette.colors[this.colorIndex % ColorPalette.colors.length];\n          this.colorIndex += 1;\n\n          this.articleIndex += 1;\n          this.getNextNews();\n        },\n        false\n      );\n    },\n    getTrendingNews: function() {\n      var url =\n        \"https://newsapi.org/v2/top-headlines?\" +\n        \"country=us&\" +\n        \"apiKey=9097f737932c4681bd54a2ed6a71dbf1\";\n      fetch(url)\n        .then(response => {\n          return response.json();\n        })\n        .then(myJson => {\n          if (this.articleIndex >= myJson.articles.length) {\n            this.articleIndex = 0;\n          }\n          this.articles = myJson.articles;\n          // let topArticle = myJson.articles[this.articleIndex].title;\n          // let split = Rita.tokenize(topArticle);\n          // let tags = Rita.getPosTags(topArticle);\n          // let nouns = [];\n          // tags.forEach((element, index) => {\n          //   // console.log(element);\n          //   if (element.includes(\"nn\")) {\n          //     nouns.push(split[index]);\n          //   }\n          // });\n\n          // console.log(nouns);\n\n          // if (nouns.length > 1) {\n          //   this.question = `What if ${nouns[0]} ${nouns[1]}`;\n          // } else {\n          //   this.question = `What if ${nouns[0]}`;\n          // }\n          // console.log(this.question);\n        });\n    },\n\n    getNextNews: function() {\n      if (this.articles != null) {\n        if (this.articleIndex >= this.articles.length) {\n          this.articleIndex = 0;\n        }\n\n        this.sceneManager.news();\n        let topArticle = this.articles[this.articleIndex].title;\n        let split = Rita.tokenize(topArticle);\n        let tags = Rita.getPosTags(topArticle);\n        let nouns = [];\n        tags.forEach((element, index) => {\n          // console.log(element);\n          if (element.includes(\"nn\")) {\n            nouns.push(split[index]);\n          }\n        });\n\n        console.log(nouns);\n        this.question = \"\";\n        // this.lstm.generate(this.question)\n\n        if (nouns.length > 1) {\n          this.question = `${nouns[0]} ${nouns[1]}`;\n        } else {\n          this.question = ` ${nouns[0]}`;\n        }\n        this.lstm.generate(this.articles[this.articleIndex].title + \" \", this.formQuestion)\n\n      }\n    }, \n\n    formQuestion(err, result) {\n      console.log(result.sample);\n            this.lstm.runningInference = false;\n\n      let split = Rita.tokenize(result.sample);\n        let tags = Rita.getPosTags(result.sample);\n        let nouns = [];\n        let verbs = [];\n        let adj = []\n\n        tags.forEach((element, index) => {\n          // console.log(element);\n          if (element.includes(\"nn\")) {\n                           if(split[index].length > 3){\n\n            nouns.push(split[index]);\n                           }\n          }\n             if (element.includes(\"vb\")) {\n               if(split[index].length > 3){\n            verbs.push(split[index]);\n\n          }\n             }\n             if (element.includes(\"jj\") || element.includes(\"rb\")) {\n               if(split[index].length > 3){\n            adj.push(split[index]);\n\n               }\n          }\n             \n        });\n\n      \n      let adverb = adj[0] ? adj[0] : ' '\n      this.question = \"What if \"  + this.question + ` could be a ${adverb} ${nouns[0]} ?`;\n\n      \n    }\n  },\n  mounted() {\n    var canvas = document.getElementById(\"canvas\");\n    this.sceneManager = new SceneManager(canvas);\n\n    this.render();\n    this.setupShake();\n    this.setupLonghold();\n    // this.getTrendingNews();\n    this.lstm = new LSTM();\n\n    \n    this.getTrendingNews();\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n#threejs-container {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  z-index: -1;\n  // background: red;\n}\n\n#question {\n  width: 80%;\n  height: 80%;\n  left: 10%;\n  top: 10%;\n  position: absolute;\n  background: rgba(0, 0, 0, 0);\n  color: white;\n  font-size: 40px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/HelloWorld.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_vm._m(0),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"question\"}},[_vm._v(_vm._s(_vm.question))])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"threejs-container\"}},[_c('canvas',{attrs:{\"id\":\"canvas\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-69fa8996\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-69fa8996\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HelloWorld.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HelloWorld.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-69fa8996\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HelloWorld.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-69fa8996\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HelloWorld.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\"div\")}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-32dcde7c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/About.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-32dcde7c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./About.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./About.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./About.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-32dcde7c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./About.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/About.vue\n// module id = null\n// module chunks = ","import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport HelloWorld from \"@/components/HelloWorld\";\nimport About from \"@/components/About\";\nVue.use(Router);\n\nexport default new Router({\n  routes: [\n    {\n      path: \"/\",\n      name: \"HelloWorld\",\n      component: HelloWorld\n    },\n    {\n      path: \"/about\",\n      name: \"About\",\n      component: About\n    }\n  ]\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","import Vue from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n  el: \"#app\",\n  router,\n  template: \"<App/>\",\n  components: { App }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}